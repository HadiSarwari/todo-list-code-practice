/* task-list.component.scss */

/* ===== Tunables ===== */
:host {
  --tile-h: 56px;                 /* tile content height */
--tile-vgap: 2px;                 /* less space between tiles */
--tile-radius: 4px;               /* less oval corners */
--tile-shadow: 0 1px 3px rgba(0,0,0,.07); /* subtler default shadow */

  --column-max: 1080px;           /* column width */
  --side-pad: 24px;

  /* Blue gradient background */
  --bg-top: #5a76f3;
  --bg-bottom: #6b8cf2;

  /* Fill viewport; add row docks at bottom */
  display: flex;
  flex-direction: column;
  height: 100svh;   /* was: min-height */
  height: 100vh;    /* fallback */
  overflow: hidden; /* prevent page-level scroll */
  min-height: 100svh;
  min-height: 100vh;

  /* Background: gradient only */
   background:
    linear-gradient(180deg, rgba(90,118,243,0.35) 0%, rgba(107,140,242,0.35) 100%),
    url('../../assets/images/j.jpg') center right / cover no-repeat;

  background-attachment: fixed;

  font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
}





/* ===== Layout: scrollable list + fixed add row ===== */
.task-pane {
  display: flex;
  flex-direction: column;
  flex: 1 1 auto;   /* occupy remaining height below title */
  min-height: 0;    /* allow overflow in flex container */
}

.task-scroll {
  flex: 1 1 auto;
  min-height: 0;         /* critical in flex layouts */
  overflow-y: auto;      /* only this area scrolls */
}

/* Centered column */
.task-list {
  display: flex;
  flex-direction: column;
  margin: 0 auto;
  width: calc(100% - var(--side-pad) * 6);   /* fill page width (minus tiny gutter) */
  padding: 24px var(--side-pad) 0;

  /* was: padding-bottom to clear fixed footer — removed now */
}

.task-list li app-task-tile {
  display: block;
  width: 100%;
  height: 100%;
}

.task-list li {
  width: 100%;
  min-height: var(--tile-h);
  margin: calc(var(--tile-vgap) / 2) 0;
  padding: 0;

  display: flex;
  align-items: center;
  gap: 12px;

  background: #f5f7fb;                       /* soft grey like To Do */
  border: 1px solid rgba(0,0,0,.06);
  border-radius: var(--tile-radius);
  box-shadow: var(--tile-shadow);
  transition: 
  background-color .15s ease,
  border-color .15s ease,
  box-shadow .15s ease,
  transform .12s ease,
  opacity .12s ease,
  filter .12s ease;
}

.task-list li:hover {
  background: #ffffff;                        /* goes a bit whiter on hover */
  border-color: rgba(0,0,0,.08);
  box-shadow: 0 2px 8px rgba(0,0,0,.12);      /* a touch more lift */
}

/* Drag preview = same look as the tile */
.cdk-drag-preview {
  display: block;                                   /* remove list-style marker */
  list-style: none !important;

  background: #f5f7fb;                             /* match .task-list li */
  border: 1px solid rgba(0,0,0,.08);
  border-radius: var(--tile-radius, 4px);
  box-shadow: 0 8px 20px rgba(0,0,0,.18);

  padding: 0;                                      /* match li (padding: 0) */
  overflow: hidden;                                /* clip child overflow */
  /* hard guarantee for rounding, even if something overflows */
  clip-path: inset(0 round var(--tile-radius, 4px));
}

/* When dragging, make other tiles feel “inactive” */
.task-list.cdk-drop-list-dragging
  li:not(.cdk-drag-dragging):not(.cdk-drag-placeholder) {
  transform: scale(0.985);          /* slight width-wise shrink */
  opacity: .65;                     /* greyed out */
  filter: saturate(.9) brightness(.98);
  pointer-events: none;             /* no hover noise while dragging */
}

/*  the source tile pops a hair before it becomes the preview */
.task-list li.cdk-drag-dragging {
  transform: scale(1.01);
}

/* Preserve rounded corners in drag preview */
.cdk-drag-preview > * { border-radius: inherit; }
.cdk-drag-preview app-task-tile { background: transparent !important; }

.cdk-drag-placeholder {
  opacity: .35;
  background: transparent;
  border: 1px dashed rgba(0,0,0,.25);
  border-radius: var(--tile-radius, 4px);
}

/* ===== Add row (rendered as a <li>) ===== */
/* Input expands to fill row */
.add-tile .new-task-input {
  flex: 1;
  border: 0;
  outline: none;
  background: transparent;
  font-size: 16px;
}
.add-tile .new-task-input::placeholder { color: #8a9bb9; }

/* Add-row layout */
.add-tile { display: flex; align-items: center; }

/* Left icon placeholder (20×20) matching checkbox footprint */
.add-leading {
  position: relative;
  width: 20px; height: 20px;
  flex: 0 0 20px;
  margin-right: 12px;  
  margin-left: 8px;
}

/* Plus icon via SVG mask (inherits currentColor) */
.add-plus {
  position: absolute; inset: 0;
  display: grid; place-items: center;
  width: 100%; height: 100%;
  background: #6b7280; /* gray-500 */
  -webkit-mask: url('../../assets/icons/add_24_regular.svg') no-repeat center / 16px 16px;
          mask: url('../../assets/icons/add_24_regular.svg') no-repeat center / 16px 16px;
  pointer-events: none; /* decorative only */
}

/* Hover styles when input is empty */
.add-tile:hover .add-plus    { background: #1a73e8; }

/* Swap: show plus by default; show checkbox while typing */
.add-leading .todo-checkbox { display: none; }
.add-tile.typing .add-leading .add-plus { display: none; }
.add-tile.typing .add-leading .todo-checkbox { display: inline-block; }

/* ===== Context Menu ===== */
.context-menu {
  position: fixed;        /* prevent clipping inside scroll container */
  z-index: 9999;
  background: #fff;
  border: 1px solid #dfe3ea;
  border-radius: 8px;
  box-shadow: 0 8px 24px rgba(0,0,0,.15);

  /* Base sizing */
  padding: 4px 0;
  min-width: 180px;        
  max-width: 240px;        
  overflow: hidden;        /* contain item hover/active states */
}

.context-menu * { box-sizing: border-box; }  /* normalize box sizing */

.context-menu ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

/* Layout/typography */
.context-menu li {
  display: flex;
  align-items: center;
  gap: 10px;
  padding: 10px 12px;
  border-radius: 8px;
  color: #1f2937; /* slate-800 */
}
.context-menu li:hover {
  background: #e8f0fe; /* very light blue */
}

/* Separator line */
.context-menu li.separator {
  height: 1px;
  padding: 0;
  margin: 6px 8px;
  background: #eef2f7;
  pointer-events: none;
}

/* Right-aligned shortcut text */
.context-menu .shortcut {
  margin-left: auto;
  font-size: 12px;
  opacity: .65;
}

/* Submenu caret */
.context-menu .submenu .chev { margin-left: auto; opacity: .5; }

/* Icon masks: SVGs colored via currentColor */
.context-menu .icon {
  width: 20px; height: 20px; flex: 0 0 20px;
  background: currentColor;
  -webkit-mask: no-repeat center / contain;
  mask: no-repeat center / contain;
  opacity: .95;
}

/* Icon mask mappings (paths are relative to this file) */
.context-menu .icon.sun   { -webkit-mask-image: url('../../assets/icons/weather_sunny_24_regular.svg'); mask-image: url('../../assets/icons/weather_sunny_24_regular.svg'); }
.context-menu .icon.star  { -webkit-mask-image: url('../../assets/icons/star_24_regular.svg');            mask-image: url('../../assets/icons/star_24_regular.svg'); }
.context-menu .icon.check { -webkit-mask-image: url('../../assets/icons/checkmark_circle_24_regular.svg'); mask-image: url('../../assets/icons/checkmark_circle_24_regular.svg'); }
.context-menu .icon.cal   { -webkit-mask-image: url('../../assets/icons/calendar_ltr_24_regular.svg');     mask-image: url('../../assets/icons/calendar_ltr_24_regular.svg'); }
.context-menu .icon.move  { -webkit-mask-image: url('../../assets/icons/folder_arrow_right_24_regular.svg'); mask-image: url('../../assets/icons/folder_arrow_right_24_regular.svg'); }
.context-menu .icon.trash { -webkit-mask-image: url('../../assets/icons/delete_24_regular.svg');            mask-image: url('../../assets/icons/delete_24_regular.svg'); }


/* Delete row styling */
.context-menu li.delete { color: #d93025; }                    /* danger color */
.context-menu li.delete:hover { background: #fdecec; }         /* subtle danger hover */

/* Centered, clean page title */
.page-title {
  /* Constrain width and center align */
  width: min(var(--column-max), calc(100% - var(--side-pad) * 2));
  margin: 24px auto 8px;
  padding: 8px 4px;

  text-align: center;
  color: #fff;

  /* typography */
  font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
  font-weight: 700;
  font-size: clamp(22px, 2.8vw, 36px);
  letter-spacing: 0.2px;
  line-height: 1.2;

  /* Text shadow for contrast on gradient */
  text-shadow: 0 1px 0 rgba(0,0,0,.25);
}

/* Force transparent divider tile in all states */
.task-list li.completed-toggle,
.task-list li.completed-toggle.cdk-drag,
.task-list li.completed-toggle.cdk-drag-disabled {
  background: transparent !important;
  box-shadow: none !important;
  border: 0 !important;
}

/* Keep it transparent on hover, too */
.task-list li.completed-toggle:hover {
  background: transparent !important;
}

/* Pill-style button for the Completed toggle */
.completed-toggle .completed-btn {
  appearance: none;
  -webkit-appearance: none;
  display: inline-flex;
  align-items: center;
  gap: 8px;

  height: 36px;             
  padding: 0 14px;
  border-radius: 9999px;     /* pill shape */
  border: 1px solid rgba(0,0,0,.08);
  background: #fff;         /* solid background */
  color: #1f2937;
  box-shadow: 0 1px 2px rgba(0,0,0,.08);
  cursor: pointer;
  transition: background-color .15s, border-color .15s, box-shadow .15s, transform .05s;

  margin-left: 16px;
}

.completed-toggle .completed-btn:hover {
  background: #f8fafc;
  border-color: rgba(0,0,0,.12);
  box-shadow: 0 2px 6px rgba(0,0,0,.10);
}

.completed-toggle .completed-btn:active {
  transform: translateY(1px);
}

.completed-toggle .completed-btn:focus-visible {
  outline: none;
  box-shadow: 0 0 0 3px rgba(26,115,232,.25);
}

/* arrow + badge */
.completed-toggle .arrow { width: 1em; }
.completed-toggle .count {
  font-size: 12px;
  line-height: 18px;
  height: 18px;
  padding: 0 8px;
  border-radius: 9999px;
  background: #e5edff;
  color: #1a73e8;
}


/* Modal overlay */
.modal-backdrop {
  position: fixed;
  inset: 0;
  background: rgba(0,0,0,.35);
  z-index: 10000;
}

/* Modal panel */
.modal {
  position: fixed;
  z-index: 10001;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);

  min-width: 360px;
  max-width: 90vw;
  background: #f2f3ef;
  border: 1px solid #e5e7eb;
  border-radius: 12px;
  box-shadow: 0 20px 48px rgba(0,0,0,.22);
  padding: 16px;
}

/* Typography + layout */
.modal-title {
  margin: 0 0 8px 0;
  font-size: 18px;
  font-weight: 700;
  color: #175aeb;
}
.modal-body {
  margin: 0 0 16px 0;
  color: #374151;
}
.modal-actions {
  display: flex;
  gap: 8px;
  justify-content: flex-start;
}

/* Buttons */
.btn {
  appearance: none;
  -webkit-appearance: none;
  border-radius: 8px;
  font: inherit;
  padding: 8px 14px;
  cursor: pointer;
  border: 1px solid transparent;
}
.btn-danger {
  background: #9e150b;
  color: #fff;
  border-color: #d93025;
}
.btn-danger:hover { background: #c5271d; border-color: #c5271d; }
.btn-ghost {
  background: #eeeb41;
  color: #111827;
  border-color: #d1d5db;
}
.btn-ghost:hover { background: #f9fafb; border-color: #cbd5e1; }



